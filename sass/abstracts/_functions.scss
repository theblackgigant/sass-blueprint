@use "sass:color";
@use "sass:list";
@use "sass:string";
@use "sass:math";

@function colorToRGB($color) {
  @return color.red($color), color.green($color), color.blue($color);
}

@function pxToRem($size, $rem: 14px) {
  @return numToFixed($size / $rem) * 1rem;
}

@function getDirectParent($element) {
  $selector: list.nth($element, 1);
  $direct-parent: list.nth($selector, list.length($selector));

  @return $direct-parent;
}

@function capitalize($string) {
  @return string.to-upper-case(string.slice($string, 1, 1)) +
    string.slice($string, 2);
}

@function numToFixed($num, $digits: 3) {
  $base: 1;

  @if $digits > 0 {
    @for $i from 1 through $digits {
      $base: $base * 10;
    }
  }

  @return math.round($num * $base) / $base;
}

@function tintColor($color, $weight) {
  @return color.mix(white, $color, $weight);
}

@function shadeColor($color, $weight) {
  @return color.mix(black, $color, $weight);
}

@function fontScale(
  $minFS,
  $maxFS,
  $minVW: 360px,
  $maxVW: 1140px,
  $px-per-rem: 14px
) {
  $minVW: $minVW / $px-per-rem;
  $maxVW: $maxVW / $px-per-rem;
  $slope: (($maxFS - $minFS) / ($maxVW - $minVW)) / 1rem;
  $yAxisIntersection: -$minVW * $slope + $minFS;

  $slopeRound: numToFixed($slope * 100) * 1vw;
  $yIntersectionRound: numToFixed($yAxisIntersection);

  @return clamp(
    #{$minFS},
    calc(#{$yIntersectionRound} + #{$slopeRound}),
    #{$maxFS}
  );
}
